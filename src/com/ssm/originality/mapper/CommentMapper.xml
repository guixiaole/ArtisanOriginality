<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.originality.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.originality.po.Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="comment_detaile" property="commentDetaile" jdbcType="TINYINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="score_avg" property="scoreAvg" jdbcType="DOUBLE" />
    <result column="comment_time" property="commentTime" jdbcType="VARCHAR" />
    <result column="pro_id" property="proId" jdbcType="INTEGER" />
    <result column="ac_id" property="acId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    comment_id, title, comment_detaile, content, parent_id, score_avg, comment_time, 
    pro_id, ac_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.originality.po.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.originality.po.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.originality.po.Comment" >
    insert into comment (comment_id, title, comment_detaile, 
      content, parent_id, score_avg, 
      comment_time, pro_id, ac_id
      )
    values (#{commentId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{commentDetaile,jdbcType=TINYINT}, 
      #{content,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{scoreAvg,jdbcType=DOUBLE}, 
      #{commentTime,jdbcType=VARCHAR}, #{proId,jdbcType=INTEGER}, #{acId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.originality.po.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="commentDetaile != null" >
        comment_detaile,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="scoreAvg != null" >
        score_avg,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="acId != null" >
        ac_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="commentDetaile != null" >
        #{commentDetaile,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="scoreAvg != null" >
        #{scoreAvg,jdbcType=DOUBLE},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="acId != null" >
        #{acId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.originality.po.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.commentDetaile != null" >
        comment_detaile = #{record.commentDetaile,jdbcType=TINYINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.scoreAvg != null" >
        score_avg = #{record.scoreAvg,jdbcType=DOUBLE},
      </if>
      <if test="record.commentTime != null" >
        comment_time = #{record.commentTime,jdbcType=VARCHAR},
      </if>
      <if test="record.proId != null" >
        pro_id = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.acId != null" >
        ac_id = #{record.acId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      comment_detaile = #{record.commentDetaile,jdbcType=TINYINT},
      content = #{record.content,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      score_avg = #{record.scoreAvg,jdbcType=DOUBLE},
      comment_time = #{record.commentTime,jdbcType=VARCHAR},
      pro_id = #{record.proId,jdbcType=INTEGER},
      ac_id = #{record.acId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.originality.po.Comment" >
    update comment
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="commentDetaile != null" >
        comment_detaile = #{commentDetaile,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="scoreAvg != null" >
        score_avg = #{scoreAvg,jdbcType=DOUBLE},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        pro_id = #{proId,jdbcType=INTEGER},
      </if>
      <if test="acId != null" >
        ac_id = #{acId,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.originality.po.Comment" >
    update comment
    set title = #{title,jdbcType=VARCHAR},
      comment_detaile = #{commentDetaile,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      score_avg = #{scoreAvg,jdbcType=DOUBLE},
      comment_time = #{commentTime,jdbcType=VARCHAR},
      pro_id = #{proId,jdbcType=INTEGER},
      ac_id = #{acId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>